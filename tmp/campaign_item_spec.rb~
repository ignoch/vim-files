require 'spec_helper'

describe CampaignItem do
  let :campaign_item do
    stub_model CampaignItem, :id => 1, :type_transition => 0, :time_start => '00:00', :time_end => '00:00', :duration_transition => 10, :visual_scope => 0, :random_attributte => true
  end

  context "Image Transitions" do
    it "should cannot be an invalid transition" do
      campaign_item.set_transition("wrong_transition")
      campaign_item.should have(2).error_on(:type_transition)
    end

    it "should set a up transition animation" do
      campaign_item.set_transition('up')
      campaign_item.should be_valid
    end

    it "should set a down transition animation" do
      campaign_item.set_transition('down')
      campaign_item.should be_valid
    end

    it "should set a left transition animation" do
      campaign_item.set_transition('left')
      campaign_item.should be_valid
    end

    it "should set a right transition animation" do
      campaign_item.set_transition('right')
      campaign_item.should be_valid
    end

    it "should set a integer" do
      campaign_item.type_transition = "invalid"
      campaign_item.should have(1).error_on(:type_transition)
    end
  end

  context "Duration transition" do
    it "should cannot be a string" do
      campaign_item.duration_transition = "invalid_duration_transition"
      campaign_item.should have(1).error_on(:duration_transition)
    end

    it "should be a valid number" do
      campaign_item.duration_transition = "20"
      campaign_item.should be_valid 
    end

  end

  context "Hours to show an Image" do

    it "event start cannot be a string" do
      campaign_item.event_start = "malformed_time"
      campaign_item.should have(1).error_on(:time_start)
    end

    it "event start should be a valid time" do
      campaign_item.event_start = "12:00"
      campaign_item.should be_valid
    end

    it "event end cannot be a string" do
      campaign_item.event_end = "malformed_time"
      campaign_item.should have(1).error_on(:time_end)
    end
    
    it "event start should be a valid time" do
      campaign_item.event_start = "00:00"
      campaign_item.should be_valid
    end

  end

  context "Scopes from Images" do
     it "should cannot be an invalid scope" do
       campaign_item.set_scope("invalid_scope")
       campaign_item.should have(2).error_on(:visual_scope)
     end

     it 'should set valid scope "externo"' do
       campaign_item.set_scope('externo')
       campaign_item.should be_valid
     end

     it 'should set valid scope "interno"' do
       campaign_item.set_scope('interno')
       campaign_item.should be_valid
     end

     it 'should set valid scope "cargador"' do
       campaign_item.set_scope('cargador')
       campaign_item.should be_valid
     end

     it 'should cannot set a string scope' do
       campaign_item.visual_scope = "invalid"
       campaign_item.should have(1).error_on(:visual_scope)
     end
  end

  context "Image Attachment" do
    it { should_have_attached_file(:image)} 
  end
  
end
