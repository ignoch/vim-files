class CampaignItem < ActiveRecord::Base
  SCOPES = %w[externo interno cargador]
  belongs_to :playlist
  belongs_to :campaign
  has_attached_file :image, 
	:styles => {:small => "100x100#" }


  before_save :update_modification_time_to_campaign, :check_file
  
  validates :duration_transition, :numericality => true, :presence => true 
  validates :time_start_field, :time_end_field, :format => { :with => /\A[0-9]{1,2}\:[0-9]{2}\z/i, :on => :create }, :presence => true
  validates_attachment_presence :image
  validates_attachment_content_type :image, :content_type => ['image/jpeg','image/bmp']
  validate :time_start_cannot_be_less_than_time_end

  scope :for_campaign, lambda { |campaign_id, visual_scope|
    joins(:campaign).where("campaign_items.visual_scope = ? AND campaings.id = ?", visual_scope, campaign_id)
  }

  def self.num_images(campaign_id, visual_scope)
    CampaignItem.where('campaign_id = ? AND visual_scope = ?', campaign_id, visual_scope).count
  end
  
  
  def time_start_field
    time_start.strftime("%H:%M") unless time_start.nil?
  end

  def time_end_field
    time_end.strftime("%H:%M") unless time_end.nil?
  end

  def time_start_field=(time_str)
    self.time_start = Time.parse(time_str)
    rescue ArgumentError
  end

  def time_end_field=(time_str)
    self.time_end = Time.parse(time_str)
    rescue ArgumentError
  end 

  def time_start_cannot_be_less_than_time_end
	errors.add(:time_start_field,"no puede ser mayor que la Hora Fin") if !time_start.blank? and !time_end.blank? and Time.parse(time_end_field) < Time.parse(time_start_field)
  end
  
  def self.type_transitions
    options = Array.new
    options << [0,"Hacia arriba"]
    options << [1,"Hacia abajo"]
    options << [2,"Hacia la derecha"]
    options << [3,"Hacia la izquierda"]
    options 
  end

  protected 

  def update_modification_time_to_campaign
    playlist = Playlist.find(self.playlist_id)
    playlist.last_update = false
    playlist.save
  end

  def check_file
    if self.image_content_type == "image/jpeg"
      self.type_transition = 0
    end
  end

end
