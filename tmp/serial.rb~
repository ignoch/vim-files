class Serial < ActiveRecord::Base
  HEAD = "SH2"
  belongs_to :country
  belongs_to :state
  belongs_to :city
#  validates :country_id, :state_id, :city_id, :uniqueness => { :scope => [:country_id, :state_id, :city_id,]}
#  before_save :update_folio
  scope :find_last, lambda { |country_id,state_id,city_id| where('country_id = ? AND state_id = ? AND city_id = ?',country_id,state_id,city_id)}

  def self.update_folio(country_id,state_id,city_id)
    conditions = {
      :country_id => country_id, 
      :state_id => state_id, 
      :city_id => city_id 
    }
    serial = Serial.find_or_create_by_country_id_and_state_id_and_city_id(conditions)
    serial.increment(:folio)
    serial.save
    serial.generate
  end
  
  def generate
    cad = Serial::HEAD
    cad = cad + "-" + self.country.acronym.upcase
    cad = cad + "-" + self.state.acronym.upcase
    cad = cad + "-" + self.city.acronym.upcase
    folio = "00" + self.folio.to_s
    cad = cad + "-" + folio.slice(-3,3)
    cad
  end
end
